# Path relative to the justfile's location
RPI_REMOTE_TOOLS_PATH := "rpi_remote_tools"
RPI_REMOTE_TOOLS_MODULE := "tools"


# Executing "just" without arguments is listing recipes
list-recipes:
    @just --list --unsorted

# Checking about application is already running on Raspberry Pi device.
check:
    @uv run --quiet --project "{{RPI_REMOTE_TOOLS_PATH}}" python -m "{{RPI_REMOTE_TOOLS_PATH}}.{{RPI_REMOTE_TOOLS_MODULE}}" --rpi-check-app

# Killing running application on Raspberry Pi device
kill:
    @uv run --quiet --project "{{RPI_REMOTE_TOOLS_PATH}}" python -m "{{RPI_REMOTE_TOOLS_PATH}}.{{RPI_REMOTE_TOOLS_MODULE}}" --rpi-kill-app

# Starting application on Raspberry Pi device (first it will kill already running app) 
run:
    @uv run --quiet --project "{{RPI_REMOTE_TOOLS_PATH}}" python -m "{{RPI_REMOTE_TOOLS_PATH}}.{{RPI_REMOTE_TOOLS_MODULE}}" --rpi-run-app

# Copying application to Raspberry Pi device and then starting application
sync:
    @uv run --quiet --project "{{RPI_REMOTE_TOOLS_PATH}}" python -m "{{RPI_REMOTE_TOOLS_PATH}}.{{RPI_REMOTE_TOOLS_MODULE}}" --rpi-copy-code

# Live stream from Raspberry Pi device tmux session
tmux:
    @uv run --quiet --project "{{RPI_REMOTE_TOOLS_PATH}}" python -m "{{RPI_REMOTE_TOOLS_PATH}}.{{RPI_REMOTE_TOOLS_MODULE}}" --rpi-tmux
